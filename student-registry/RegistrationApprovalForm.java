/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RegistrationApprovalForm.java
 *
 * Created on Jan 19, 2012, 5:24:20 PM
 */
package Presentation;
import Application.Student;
import Application.Course;
/**
 *
 * @author lapowner
 */
public class RegistrationApprovalForm extends javax.swing.JFrame {
    //Student stud = new Student();
    Student[] student;
    int count=0, courselen = 0; static int length=0;
    
    /** Creates new form RegistrationApprovalForm */
    public RegistrationApprovalForm() {
        initComponents();
        getStudentList();
        length = student.length;
        FirstNameLabel.setText(student[count].getName());
        FatherNameLabel.setText(student[count].getFatherName());
        GrandFatherLabel.setText(student[count].getGrandFather());
        IDLabel.setText(student[count].PrintID());
        try{
            if(student[count].getRegApproval().equals("Yes")) RegisterCheckBox.setSelected(true);
            else  RegisterCheckBox.setSelected(false); 
        }
        catch(Exception e){}
        
        //courses registered by a student
        int id = student[count].getId(), totalcrhr = 0;
        Course[] course = student[count].getCourseList(id);    
        for(int i=0; i<courselen;i++){
           CoursesTable.setValueAt(null, i, 0);
           CoursesTable.setValueAt(null, i, 1);            
        }
        if (course!=null){            
            courselen = course.length;
            for(int i = 0; i < courselen; i ++){
               CoursesTable.setValueAt(course[i].getTitle(), i, 0);
               CoursesTable.setValueAt(course[i].getCredithour(), i, 1);
               totalcrhr += Integer.parseInt(course[i].getCredithour());
            }            
        }
        TotalCrHrLabel.setText(Integer.toString(totalcrhr));        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CoursesTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        FirstNameLabel = new javax.swing.JLabel();
        FatherNameLabel = new javax.swing.JLabel();
        GrandFatherLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        IDLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        RegisterCheckBox = new javax.swing.JCheckBox();
        FirstButton = new javax.swing.JButton();
        PreviousButton = new javax.swing.JButton();
        NextButton = new javax.swing.JButton();
        LastButton = new javax.swing.JButton();
        TotalCrHrLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        UpdateButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        CloseButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Course Registration Approval Form");
        setResizable(false);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        CoursesTable.setAutoCreateRowSorter(true);
        CoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title", "CrHr"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CoursesTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        CoursesTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(CoursesTable);

        jLabel1.setText("Full Name:");

        jLabel2.setText("ID Number:");

        jLabel3.setText("Total CrHr:");

        RegisterCheckBox.setText("Approve");
        RegisterCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterCheckBoxActionPerformed(evt);
            }
        });

        FirstButton.setText("First");
        FirstButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstButtonActionPerformed(evt);
            }
        });

        PreviousButton.setText("<< Previous");
        PreviousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousButtonActionPerformed(evt);
            }
        });

        NextButton.setText("Next >>");
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        LastButton.setText("Last");
        LastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastButtonActionPerformed(evt);
            }
        });

        TotalCrHrLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TotalCrHrLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TotalCrHrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(FatherNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GrandFatherLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegisterCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(FirstButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PreviousButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NextButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(LastButton))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GrandFatherLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                    .addComponent(FatherNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                    .addComponent(FirstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegisterCheckBox, 0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TotalCrHrLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                    .addComponent(IDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FirstButton)
                    .addComponent(PreviousButton)
                    .addComponent(LastButton)
                    .addComponent(NextButton)))
        );

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
            .addComponent(CloseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UpdateButton)
                .addGap(28, 28, 28)
                .addComponent(ClearButton)
                .addGap(36, 36, 36)
                .addComponent(CloseButton)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PreviousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousButtonActionPerformed
        if(count>0){
            count--;
            FirstNameLabel.setText(student[count].getName());
            FatherNameLabel.setText(student[count].getFatherName());
            GrandFatherLabel.setText(student[count].getGrandFather());
            IDLabel.setText(student[count].PrintID());
            try{
                if(student[count].getRegApproval().equals("Yes")) RegisterCheckBox.setSelected(true);
                else  RegisterCheckBox.setSelected(false); 
            }
            catch(Exception e){} 

            //courses registered by a student
            int id = student[count].getId(), totalcrhr = 0;
            Course[] course = student[count].getCourseList(id);
            for(int i=0; i<courselen;i++){
               CoursesTable.setValueAt(null, i, 0);
               CoursesTable.setValueAt(null, i, 1);            
            }
            if (course!=null){
                courselen = course.length;
                for(int i = 0; i < courselen; i ++){
                   CoursesTable.setValueAt(course[i].getTitle(), i, 0);
                   CoursesTable.setValueAt(course[i].getCredithour(), i, 1);
                   totalcrhr += Integer.parseInt(course[i].getCredithour());
                }            
            }
            TotalCrHrLabel.setText(Integer.toString(totalcrhr));             
        }
    }//GEN-LAST:event_PreviousButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        if(count<length-1){
            count++;            
            FirstNameLabel.setText(student[count].getName());
            FatherNameLabel.setText(student[count].getFatherName());
            GrandFatherLabel.setText(student[count].getGrandFather());
            IDLabel.setText(student[count].PrintID());
            try{
                if(student[count].getRegApproval().equals("Yes")) RegisterCheckBox.setSelected(true);
                else  RegisterCheckBox.setSelected(false); 
            }
            catch(Exception e){}      
            
            //courses registered by a student
            int id = student[count].getId(), totalcrhr = 0;
            Course[] course = student[count].getCourseList(id);
            for(int i=0; i<courselen;i++){
               CoursesTable.setValueAt(null, i, 0);
               CoursesTable.setValueAt(null, i, 1);            
            }
            if (course!=null){
                courselen = course.length;
                for(int i = 0; i < courselen; i ++){
                   CoursesTable.setValueAt(course[i].getTitle(), i, 0);
                   CoursesTable.setValueAt(course[i].getCredithour(), i, 1);
                   totalcrhr += Integer.parseInt(course[i].getCredithour());
                }            
            }
            TotalCrHrLabel.setText(Integer.toString(totalcrhr));             
        }
    }//GEN-LAST:event_NextButtonActionPerformed

    private void FirstButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstButtonActionPerformed
        count=0;
        FirstNameLabel.setText(student[count].getName());
        FatherNameLabel.setText(student[count].getFatherName());
        GrandFatherLabel.setText(student[count].getGrandFather());
        IDLabel.setText(student[count].PrintID());
        try{
            if(student[count].getRegApproval().equals("Yes")) RegisterCheckBox.setSelected(true);
            else  RegisterCheckBox.setSelected(false); 
        }
        catch(Exception e){}   
        
        //courses registered by a student
        int id = student[count].getId(), totalcrhr = 0;
        Course[] course = student[count].getCourseList(id);
        for(int i=0; i<courselen;i++){
           CoursesTable.setValueAt(null, i, 0);
           CoursesTable.setValueAt(null, i, 1);            
        }
        if (course!=null){
            courselen = course.length;
            for(int i = 0; i < courselen; i ++){
               CoursesTable.setValueAt(course[i].getTitle(), i, 0);
               CoursesTable.setValueAt(course[i].getCredithour(), i, 1);
               totalcrhr += Integer.parseInt(course[i].getCredithour());
            }            
        }
        TotalCrHrLabel.setText(Integer.toString(totalcrhr));                     
    }//GEN-LAST:event_FirstButtonActionPerformed

    private void LastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastButtonActionPerformed
        count=length-1;
        FirstNameLabel.setText(student[count].getName());
        FatherNameLabel.setText(student[count].getFatherName());
        GrandFatherLabel.setText(student[count].getGrandFather());
        IDLabel.setText(student[count].PrintID());
        try{
            if(student[count].getRegApproval().equals("Yes")) RegisterCheckBox.setSelected(true);
            else  RegisterCheckBox.setSelected(false); 
        }
        catch(Exception e){}  

        //courses registered by a student
        int id = student[count].getId(), totalcrhr = 0;
        Course[] course = student[count].getCourseList(id);
        for(int i=0; i<courselen;i++){
           CoursesTable.setValueAt(null, i, 0);
           CoursesTable.setValueAt(null, i, 1);            
        }
        if (course!=null){
            courselen = course.length;
            for(int i = 0; i < courselen; i ++){
               CoursesTable.setValueAt(course[i].getTitle(), i, 0);
               CoursesTable.setValueAt(course[i].getCredithour(), i, 1);
               totalcrhr += Integer.parseInt(course[i].getCredithour());
            }            
        }
        TotalCrHrLabel.setText(Integer.toString(totalcrhr));           
    }//GEN-LAST:event_LastButtonActionPerformed

    private void RegisterCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterCheckBoxActionPerformed
        if(RegisterCheckBox.isSelected()) student[count].setRegApproval("Yes");
        else student[count].setRegApproval("No"); 
    }//GEN-LAST:event_RegisterCheckBoxActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        student[count].setRegApproval("No");
        RegisterCheckBox.setSelected(false);
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        //count = length-1;
        try{
            Student stud = new Student();
            for(int i=0;i<length;i++){                
              if(student[i].getRegApproval().equals("Yes")) 
                  stud.ApproveRegister(student[i].getId(), "Yes");
              else stud.ApproveRegister(student[i].getId(), "No");
            }
        }
        catch (Exception e){}
    }//GEN-LAST:event_UpdateButtonActionPerformed
    private void getStudentList(){
         Student stud = new Student();
         student = stud.getStudentList();     
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationApprovalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationApprovalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationApprovalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationApprovalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new RegistrationApprovalForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton CloseButton;
    private javax.swing.JTable CoursesTable;
    private javax.swing.JLabel FatherNameLabel;
    private javax.swing.JButton FirstButton;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JLabel GrandFatherLabel;
    private javax.swing.JLabel IDLabel;
    private javax.swing.JButton LastButton;
    private javax.swing.JButton NextButton;
    private javax.swing.JButton PreviousButton;
    private javax.swing.JCheckBox RegisterCheckBox;
    private javax.swing.JLabel TotalCrHrLabel;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
